import requests  # Th√™m d√≤ng n√†y ƒë·ªÉ import th∆∞ vi·ªán requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from telegram.ext import MessageHandler, filters
from search_by_gemini import search_and_respond

TELEGRAM_TOKEN = '7201416424:AAHLwyzpJoyzr5A7CdmLxmrv1ZYe4HjcnvY'
CHAT_ID = '6554124253'

API_URL = 'http://localhost:8000/search'

async def chat_bot_bt(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Tr∆∞·ªùng h·ª£p 1: N·∫øu ng∆∞·ªùi d√πng g·ª≠i tin nh·∫Øn tr·ª±c ti·∫øp v·ªõi bot
    if update.message.chat.type == 'private':  # Bot ƒëang nh·∫≠n tin nh·∫Øn t·ª´ chat ri√™ng
        if update.message.text.startswith('/chat_bot'):
            user_message = ' '.join(update.message.text.split()[1:])  # L·∫•y c√¢u h·ªèi t·ª´ sau /chat_bot
            print(user_message)
        else:  
            user_message = update.message.text
            print(user_message)

            try:
                # G·ª≠i th√¥ng b√°o ƒëang "typing"
                await update.message.chat.send_action("typing")

                # G·ªçi API v·ªõi query
                reply_text = search_and_respond(user_message)
                # response.raise_for_status()
                # data = response.json()
                # reply_text = data.get("results", "‚ö†Ô∏è API kh√¥ng tr·∫£ v·ªÅ k·∫øt qu·∫£.")
            except Exception as e:
                reply_text = f"üö´ L·ªói khi g·ªçi API: {e}"
            await update.message.reply_text(reply_text[:4000])

    # Tr∆∞·ªùng h·ª£p 2: N·∫øu ng∆∞·ªùi d√πng g·ª≠i tin nh·∫Øn trong nh√≥m v√† c√≥ l·ªánh /chat_bot
    elif update.message.chat.type == 'supergroup' or update.message.chat.type == 'group':  # Bot nh·∫≠n tin nh·∫Øn t·ª´ nh√≥m
        if update.message.text.startswith('/chat_bot'):
            user_message = ' '.join(update.message.text.split()[1:])  # L·∫•y c√¢u h·ªèi t·ª´ sau /chat_bot
            print(user_message)

            try:
                # G·ª≠i th√¥ng b√°o ƒëang "typing"
                await update.message.chat.send_action("typing")

                # G·ªçi API v·ªõi query
                response = requests.get(API_URL, params={"q": user_message}, timeout=10)
                response.raise_for_status()
                data = response.json()
                reply_text = data.get("results", "‚ö†Ô∏è API kh√¥ng tr·∫£ v·ªÅ k·∫øt qu·∫£.")
            except Exception as e:
                reply_text = f"üö´ L·ªói khi g·ªçi API: {e}"

            # ‚úÖ Ph·∫£n h·ªìi ng∆∞·ªùi d√πng trong nh√≥m
            await update.message.reply_text(reply_text[:4000])

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, chat_bot_bt))
    print("ü§ñ Bot ƒëang ch·∫°y...")
    app.run_polling()

if __name__ == '__main__':
    main()
